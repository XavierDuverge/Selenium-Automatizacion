{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-04T00:31:09.630Z",
    "end": "2024-12-04T00:31:20.385Z",
    "duration": 10755,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bc29f46d-d494-4611-a5c5-8858ff452615",
      "title": "",
      "fullFile": "C:\\Users\\Xavie\\OneDrive\\Escritorio\\Selenium P3\\Pruebas\\Login.spec.js",
      "file": "\\Pruebas\\Login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6524ac1b-b2ad-42a4-8c65-b30928a30236",
          "title": "login",
          "fullFile": "C:\\Users\\Xavie\\OneDrive\\Escritorio\\Selenium P3\\Pruebas\\Login.spec.js",
          "file": "\\Pruebas\\Login.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login With Standard_user credentials",
              "fullTitle": "login login With Standard_user credentials",
              "timedOut": false,
              "duration": 10730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    driver = await new Builder().forBrowser('chrome').build();\n     // Paso 1: Abre la URL especificada (Facebook)\n    await driver.get('http://127.0.0.1:5500/index.html');\n    await takeScreenshot(driver, '01_open_page'); // Captura después de abrir la página\n    // Paso 2: Interactúa con los campos de usuario\n    await driver.findElement(By.id('name')).sendKeys('Xavier Duverge');\n    await takeScreenshot(driver, '02_enter_username'); // Captura después de introducir el usuario\n    // Paso 3: Interactúa con el campo de contraseña\n    await driver.findElement(By.id('provincia')).sendKeys('Distrito Nacional');\n    await takeScreenshot(driver, '03_enter_password'); \n    await driver.findElement(By.id('ciudad')).sendKeys('Santo Domingo');\n    await takeScreenshot(driver, '03_enter_password'); \n\n    await driver.findElement(By.id('sector')).sendKeys('San Carlos');\n    await takeScreenshot(driver, '03_enter_password'); \n    await driver.findElement(By.id('calle')).sendKeys('Calle Altagracia');\n    await takeScreenshot(driver, '03_enter_password'); \n    await driver.findElement(By.id('CarreraSelect')).sendKeys('Software');\n    await takeScreenshot(driver, '03_enter_password'); \n    // Paso 4: Hacer clic en el botón de login\n    await driver.findElement(By.id('Enviar')).click();\n    await takeScreenshot(driver, '04_click_login');  \n    // Paso final: Enviar el formulario\n    await driver.wait(until.elementLocated(By.id('Enviar')), 5000);\n    await driver.findElement(By.id('Enviar')).click();\n    await takeScreenshot(driver, '04_click_submit');\n    console.log('Prueba exitosa');\n} catch (error) {\n    console.error('Error en la prueba:', error);\n    if (driver) await takeScreenshot(driver, 'error_scenario');\n} finally {\n    if (driver) await driver.quit();\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xavie\\OneDrive\\Escritorio\\Selenium P3\\Pruebas\\Login.spec.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xavie\\OneDrive\\Escritorio\\Selenium P3\\Pruebas\\Login.spec.js)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9fe8bdcc-46e8-4947-8329-b22ee35bcd43",
              "parentUUID": "6524ac1b-b2ad-42a4-8c65-b30928a30236",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9fe8bdcc-46e8-4947-8329-b22ee35bcd43"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "resultado",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reportes",
        "reportFilename": "resultado"
      },
      "version": "6.2.0"
    }
  }
}